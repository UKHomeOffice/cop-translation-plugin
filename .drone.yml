pipeline:
  test:
    image: node:11
    commands:
      - npm install
      - npm run coverage
      - npm run linter
    when:
      event:
      - push
      - pull_request

  sonar-scanner:
    image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.1
    when:
      status:
        - failure
        - success
      event:
        - push
        - pull_request

  synch_dev_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=dev
    secrets:
      - source: DEV_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: DEV_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      event: push

  synch_staging_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=staging
    secrets:
      - source: STAGING_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: STAGING_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      branch: master
      event: push

  synch_production_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=production
    secrets:
      - source: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      branch: master
      event: push

  image_to_quay:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
    - source: QUAY_USERNAME
      target: DOCKER_USERNAME
    - source: QUAY_PASSWORD
      target: DOCKER_PASSWORD
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/cop-private-translation-service
    tags: ${DRONE_COMMIT_SHA}
    when:
      branch:
        - master
      event:
        - push

  deploy_to_dev:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: DEV_API_COP_URL
        target: API_COP_URL
      - source: PROTOCOL_HTTPS
        target: API_FORM_PROTOCOL
      - source: DEV_API_FORM_URL
        target: API_FORM_URL
      - source: PROTOCOL_HTTPS
        target: API_REF_PROTOCOL
      - source: DEV_API_REF_URL
        target: API_REF_URL
      - source: PROTOCOL_HTTPS
        target: ENGINE_PROTOCOL
      - source: DEV_ENGINE_URL
        target: ENGINE_URL
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: DEV_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: DEV_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: DEV_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: DEV_KUBE_SERVER
        target: KUBE_SERVER
      - source: DEV_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
      - source: DEV_REDIS_PORT
        target: REDIS_PORT
      - source: DEV_REDIS_SSL
        target: REDIS_SSL
      - source: DEV_REDIS_TOKEN
        target: REDIS_TOKEN
      - source: DEV_REDIS_URL
        target: REDIS_URL
      - source: DEV_TRANSLATION_CORS_ORIGIN
        target: TRANSLATION_CORS_ORIGIN
      - source: TRANSLATION_IMAGE
        target: TRANSLATION_IMAGE
      - source: TRANSLATION_KEYCLOAK_CLIENT_ID
        target: TRANSLATION_KEYCLOAK_CLIENT_ID
      - source: LOG_LEVEL_DEBUG
        target: TRANSLATION_LOG_LEVEL
      - source: TRANSLATION_NAME
        target: TRANSLATION_NAME
      - source: TRANSLATION_PORT
        target: TRANSLATION_PORT
      - source: DEV_TRANSLATION_PRIVATE_KEY
        target: TRANSLATION_PRIVATE_KEY
      - source: TRANSLATION_PRIVATE_KEY_PATH
        target: TRANSLATION_PRIVATE_KEY_PATH
      - source: DEV_TRANSLATION_URL
        target: TRANSLATION_URL
      - source: DEV_WHITELIST
        target: WHITELIST
      - source: PROTOCOL_HTTPS
        target: WWW_PROTOCOL
      - source: DEV_WWW_URL
        target: WWW_URL
    commands:
      - export TRANSLATION_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml
      - kd --insecure-skip-tls-verify -f kube/network-policy.yml
      - kd --insecure-skip-tls-verify -f kube/secret.yml
      - kd --insecure-skip-tls-verify -f kube/service.yml
      - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=6m
      - kd --insecure-skip-tls-verify -f kube/ingress.yml
    when:
      branch: master
      event: push

  deploy_to_staging:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: STAGING_API_COP_URL
        target: API_COP_URL
      - source: PROTOCOL_HTTPS
        target: API_FORM_PROTOCOL
      - source: STAGING_API_FORM_URL
        target: API_FORM_URL
      - source: PROTOCOL_HTTPS
        target: API_REF_PROTOCOL
      - source: STAGING_API_REF_URL
        target: API_REF_URL
      - source: PROTOCOL_HTTPS
        target: ENGINE_PROTOCOL
      - source: STAGING_ENGINE_URL
        target: ENGINE_URL
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: STAGING_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: STAGING_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: STAGING_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: STAGING_KUBE_SERVER
        target: KUBE_SERVER
      - source: STAGING_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
      - source: STAGING_REDIS_PORT
        target: REDIS_PORT
      - source: STAGING_REDIS_SSL
        target: REDIS_SSL
      - source: STAGING_REDIS_TOKEN
        target: REDIS_TOKEN
      - source: STAGING_REDIS_URL
        target: REDIS_URL
      - source: STAGING_TRANSLATION_CORS_ORIGIN
        target: TRANSLATION_CORS_ORIGIN
      - source: TRANSLATION_IMAGE
        target: TRANSLATION_IMAGE
      - source: TRANSLATION_KEYCLOAK_CLIENT_ID
        target: TRANSLATION_KEYCLOAK_CLIENT_ID
      - source: LOG_LEVEL_INFO
        target: TRANSLATION_LOG_LEVEL
      - source: TRANSLATION_NAME
        target: TRANSLATION_NAME
      - source: TRANSLATION_PORT
        target: TRANSLATION_PORT
      - source: STAGING_TRANSLATION_PRIVATE_KEY
        target: TRANSLATION_PRIVATE_KEY
      - source: TRANSLATION_PRIVATE_KEY_PATH
        target: TRANSLATION_PRIVATE_KEY_PATH
      - source: STAGING_TRANSLATION_URL
        target: TRANSLATION_URL
      - source: STAGING_WHITELIST
        target: WHITELIST
      - source: PROTOCOL_HTTPS
        target: WWW_PROTOCOL
      - source: STAGING_WWW_URL
        target: WWW_URL
    commands:
      - export TRANSLATION_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml
      - kd --insecure-skip-tls-verify -f kube/network-policy.yml
      - kd --insecure-skip-tls-verify -f kube/secret.yml
      - kd --insecure-skip-tls-verify -f kube/service.yml
      - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=6m
      - kd --insecure-skip-tls-verify -f kube/ingress.yml
    when:
      environment: staging
      event: deployment

  deploy_to_production:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - source: PROTOCOL_HTTPS
        target: API_COP_PROTOCOL
      - source: PRODUCTION_API_COP_URL
        target: API_COP_URL
      - source: PROTOCOL_HTTPS
        target: API_FORM_PROTOCOL
      - source: PRODUCTION_API_FORM_URL
        target: API_FORM_URL
      - source: PROTOCOL_HTTPS
        target: API_REF_PROTOCOL
      - source: PRODUCTION_API_REF_URL
        target: API_REF_URL
      - source: PROTOCOL_HTTPS
        target: ENGINE_PROTOCOL
      - source: PRODUCTION_ENGINE_URL
        target: ENGINE_URL
      - source: PROTOCOL_HTTPS
        target: KEYCLOAK_PROTOCOL
      - source: PRODUCTION_KEYCLOAK_REALM
        target: KEYCLOAK_REALM
      - source: PRODUCTION_KEYCLOAK_URL
        target: KEYCLOAK_URL
      - source: PRODUCTION_KUBE_NAMESPACE_PRIVATE_COP
        target: KUBE_NAMESPACE
      - source: PRODUCTION_KUBE_SERVER
        target: KUBE_SERVER
      - source: PRODUCTION_KUBE_TOKEN
        target: KUBE_TOKEN
      - source: NGINX_IMAGE
        target: NGINX_IMAGE
      - source: NGINX_TAG
        target: NGINX_TAG
      - source: PRODUCTION_REDIS_SSL
      - source: PRODUCTION_REDIS_PORT
        target: REDIS_PORT
        target: REDIS_SSL
      - source: PRODUCTION_REDIS_TOKEN
        target: REDIS_TOKEN
      - source: PRODUCTION_REDIS_URL
        target: REDIS_URL
      - source: PRODUCTION_TRANSLATION_CORS_ORIGIN
        target: TRANSLATION_CORS_ORIGIN
      - source: TRANSLATION_IMAGE
        target: TRANSLATION_IMAGE
      - source: TRANSLATION_KEYCLOAK_CLIENT_ID
        target: TRANSLATION_KEYCLOAK_CLIENT_ID
      - source: LOG_LEVEL_DEBUG
        target: TRANSLATION_LOG_LEVEL
      - source: TRANSLATION_NAME
        target: TRANSLATION_NAME
      - source: TRANSLATION_PORT
        target: TRANSLATION_PORT
      - source: PRODUCTION_TRANSLATION_PRIVATE_KEY
        target: TRANSLATION_PRIVATE_KEY
      - source: TRANSLATION_PRIVATE_KEY_PATH
        target: TRANSLATION_PRIVATE_KEY_PATH
      - source: PRODUCTION_TRANSLATION_URL
        target: TRANSLATION_URL
      - source: PRODUCTION_WHITELIST
        target: WHITELIST
      - source: PROTOCOL_HTTPS
        target: WWW_PROTOCOL
      - source: PRODUCTION_WWW_URL
        target: WWW_URL
    commands:
      - export TRANSLATION_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/cert.yml
      - kd --insecure-skip-tls-verify -f kube/network-policy.yml
      - kd --insecure-skip-tls-verify -f kube/secret.yml
      - kd --insecure-skip-tls-verify -f kube/service.yml
      - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=6m
      - kd --insecure-skip-tls-verify -f kube/ingress.yml
    when:
      environment: production
      event: deployment

  notify:
    image: plugins/slack
    secrets: [ SLACK_WEBHOOK ]
    channel: cop-deployments
    username: Drone Build Watcher
    template: >
      {{#build.deployTo}}
        *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*
        {{build.link}}
      {{else}}
        *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*
        {{build.link}}
      {{/build.deployTo}}
    when:
      branch: master
      event: [ push, deployment ]
      status: [ success, failure ]
